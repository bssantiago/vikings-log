import { IAuthorize, IAction, IRouter, IActionExecutor, IMiddleware } from './types/metadata.types';
import { IKiwiOptions } from '../types/types';
export declare class KiwiMetadataStorage {
    static readonly actions: IAction[];
    static options: IKiwiOptions;
    static readonly controllers: any[];
    static readonly params: any[];
    static readonly middlewaresBefore: IMiddleware[];
    static readonly middlewaresAfter: IMiddleware[];
    static readonly interceptors: any[];
    static readonly authorize: IAuthorize[];
    static readonly routes: IRouter;
    static init(internalOptions: IKiwiOptions): void;
    static matchRoute(route: string, httpMethod: string): IActionExecutor;
    static orderMiddlewares(internalOptions: IKiwiOptions): void;
    static generateDoc(options?: IKiwiOptions): Promise<void>;
    private static generatePath;
    private static orderParams;
    private static getParameters;
    private static getRequestBody;
}
//# sourceMappingURL=metadataStorage.d.ts.map