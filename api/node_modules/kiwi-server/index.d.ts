import { IKiwiOptions } from './types/types';
import * as http from 'http';
export * from './validators';
export * from './decorators/get';
export * from './decorators/post';
export * from './decorators/put';
export * from './decorators/delete';
export * from './decorators/isArray';
export * from './types/types';
export * from './decorators/jsonController';
export * from './decorators/param';
export * from './decorators/queryParam';
export * from './decorators/headerParam';
export * from './decorators/body';
export * from './decorators/authorize';
export * from './decorators/middlewareBefore';
export * from './decorators/middlewareAfter';
export * from './middlewares/middleware';
export * from './middlewares/errorMiddleware';
export * from './events';
export declare function createKiwiServer(options: IKiwiOptions, callback?: any): void;
export declare function addKiwiListener(name: string, listener: any): void;
export declare function emitKiwiEvent(name: string, data?: any): void;
export declare function getKiwiEmitter(): any;
export declare function getSocket(): any;
export declare function processRequest(request: http.IncomingMessage, response: http.ServerResponse): Promise<http.ServerResponse>;
//# sourceMappingURL=index.d.ts.map